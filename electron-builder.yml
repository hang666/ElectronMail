appId: 'github.com/vladimiry/ElectronMail'
artifactName: ${name}-${version}-${os}-${arch}.${ext}
productName: 'ElectronMail'
publish: {provider: github, releaseType: draft, vPrefixedTagName: true}
forceCodeSigning: false

# native dependencies compiling gets triggered in ./scripts/prepare-native-deps.ts
npmRebuild: false

directories:
  output: ./dist
files:
  # TODO exclude not needed stuff in 'files:' section to reduce app packages size, can save megabytes, so a significant improvement
  - './app/**/*'
  - './package.json'
  - '!app/**/*/index-e2e.{js,cjs,mjs}'
  #- '!node_modules/{keytar,msgpackr-extract,sodium-native}/build${/*}'
  #- 'node_modules/{keytar,msgpackr-extract,sodium-native}/build/Release/*.node'
  - '!node_modules/{keytar,msgpackr-extract,sodium-native}/bin' # "bin" folder being generated by "electron-rebuild"
  - '!node_modules/{keytar,msgpackr-extract,sodium-native}/build/node_gyp_bins' # "bin" folder being generated by "electron-rebuild"
  - '!node_modules/sodium-native/{src,test,libsodium,tmp,deps}'
compression: normal
asar: true
asarUnpack:
  - './app/electron-main/*.node'
  - './node_modules/keytar/**/*'
  - './node_modules/msgpackr-extract/**/*'
  - './node_modules/sodium-native/**/*'
afterPack: './scripts/electron-builder/hooks/afterPack/index.cjs'

mac:
  icon: ./app/assets/icons/mac/icon.icns
  category: public.app-category.productivity
  darkModeSupport: true
  target:
    - {target: dmg}

dmg:
  icon: ./app/assets/icons/mac/icon.icns
  iconSize: 128
  contents:
    - {x: 380, y: 240, type: link, path: /Applications}
    - {x: 122, y: 240, type: file}

linux:
  icon: ./app/assets/icons/png
  category: Office
  packageCategory: Office
  desktop:
    StartupWMClass: electron-mail
  executableArgs:
    - '--js-flags="--max-old-space-size=12288"'

snap:
  confinement: strict
  stagePackages:
    - default
  plugs:
    - default
    - password-manager-service
  environment:
    DISABLE_WAYLAND: 1

win:
  artifactName: ${name}-${version}-windows-${arch}.${ext}
  icon: ./app/assets/icons/win/icon.ico
  target:
    - {target: nsis}

nsis:
  artifactName: ${name}-${version}-windows-${arch}-nsis-installer.${ext}
  oneClick: false
  perMachine: false
  include: scripts/electron-builder/installer.nsh
